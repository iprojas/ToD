---

---

  <div class="modal" id="myModal">
    <div class="modal-content">
      <img src="logo.svg" width="100%" height="auto" style="margin-bottom:30px">
      <p><b>Typologies 01: Faces</b>
        <br><br>
        Developed using the open-source Stable Diffusion XL text-to-image model, these synthetic images have been fine-tuned with five custom-trained Low-Rank Adaptation (LoRA) models, each of them programmed with images from different decades drawn from the Polygoon Journaal.
        <br><br>
        Using only a few basic prompts, we've produced a typology of 6475 images, organised into an x/y grid representing emotions ('x') and roles ('y') without providing any further context. This encourages the custom-made AI model to make creative choices and envision a parallel, artificial Polygoon Journaal.
      </div>

  </div>

<style>

  .modal {
    opacity: 0;
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(10px);
    background-color: rgb(255 255 255 / 70%);
    z-index: 1;
    text-align: center;
    transition: opacity 0.2s ease-in-out; 
    pointer-events: none;
  }

  .modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .modal-content h1 {
    font-size: 40px;
    font-weight: 900;
    line-height: 2;
  }

  .modal-content p {
    font-size: 16px;
    
  }
</style>

<script>
 const modal = document.getElementById('myModal');
let idleTimeout: ReturnType<typeof setTimeout>;
let touchActive = false; // Flag to track touch interactions

function showModal() {
    if (modal && !touchActive) { // Check if touch interactions are not active
        modal.style.opacity = '1';
        modal.style.pointerEvents = 'auto'; // Make the modal clickable
    }
}

function hideModal() {
    if (modal) {
        modal.style.opacity = '0';
        modal.style.pointerEvents = 'none';
        // resetIdleTimer();
    }
}

// function resetIdleTimer() {
//     clearTimeout(idleTimeout);
//     idleTimeout = setTimeout(showModal, 20000);
// }

function handleInteraction() {
    hideModal();
}

function handleTouchStart() {
    touchActive = true; // Set the touch flag when a touch interaction occurs
    hideModal();
}

function handleTouchEnd() {
    touchActive = false; // Reset the touch flag when touch interaction ends
    // resetIdleTimer();
}

window.addEventListener('mousemove', handleInteraction);
window.addEventListener('keydown', handleInteraction);
window.addEventListener('touchstart', handleTouchStart, { passive: true });
window.addEventListener('touchend', handleTouchEnd, { passive: true });

window.addEventListener('beforeunload', () => {
    window.removeEventListener('mousemove', handleInteraction);
    window.removeEventListener('keydown', handleInteraction);
    window.removeEventListener('touchstart', handleTouchStart);
    window.removeEventListener('touchend', handleTouchEnd);
    clearTimeout(idleTimeout);
});

const modButton = document.getElementById('mod');
  
modButton.addEventListener('click', () => {
           showModal();
       });
 

// resetIdleTimer();
</script>
